lb_config = {
  {%- for item in load_balancers %}
  "{{ item.lb_name }}" = {
    lb_name = "{{ item.lb_name }}"
    internal = {{ item.internal }}
    subnet = {{ item.subnets }}
    tags = {
      {%- for tag in item.tags %}
      {{ tag.key }} = "{{ tag.value }}"
      {%- endfor %}
    }
    vpc_id = "{{ item.vpc_id }}"
    security_groups_ids = {{ item.security_groups_ids }}

    subnet_mapping = [
      {%- for subnet in item.subnet_mapping %}
      {
        {%- for key, value in subnet.items() %}
        {{ key }} = {{ '"' ~ value ~ '"' if value != "null" else value }}
        {%- endfor %}
      }{% if not loop.last %}, {% endif %}
      {%- endfor %}
    ]

    access_logs = [
      {%- for log in item.access_logs %}
      {
        {%- for key, value in log.items() %}
        {{ key }} = {{ '"' ~ value ~ '"' if value != "null" and value|lower not in ['true', 'false'] else value }}
        {%- endfor %}
      }{% if not loop.last %}, {% endif %}
      {%- endfor %}
    ]

    connection_logs = [
      {%- for log in item.connection_logs %}
      {
        {%- for key, value in log.items() %}
        {{ key }} = {{ '"' ~ value ~ '"' if value != "null" and value|lower not in ['true', 'false'] else value }}
        {%- endfor %}
      }{% if not loop.last %}, {% endif %}
      {%- endfor %}
    ]

    target_groups = {
      {%- for tg in item.target_groups %}
      {{ tg.name }} = {
        name = "{{ tg.name }}"
        port = "{{ tg.port }}"
        protocol = "{{ tg.protocol }}"
        vpc_id = "{{ tg.vpc_id }}"
        target_type = "{{ tg.target_type }}"
        health_check = {
          {%- for key, value in tg.health_check.items() %}
          {{ key }} = {{ '"' ~ value ~ '"' if value != "null" and value|lower not in ['true', 'false'] and value is not number else value }}
          {%- endfor %}
        }
        stickiness = {
          {%- for key, value in tg.stickiness.items() %}
          {{ key }} = {{ '"' ~ value ~ '"' if value != "null" and value|lower not in ['true', 'false'] and value is not number else value }}
          {%- endfor %}
        }
      }{% if not loop.last %}, {% endif %}
      {%- endfor %}
    }

    ip_address_type = "{{ item.ip_address_type }}"
    load_balancer_type = "{{ item.load_balancer_type }}"
    customer_owned_ipv4_pool = "{{ item.customer_owned_ipv4_pool }}"
    desync_mitigation_mode = "{{ item.desync_mitigation_mode }}"
    dns_record_client_routing_policy = "{{ item.dns_record_client_routing_policy }}"
    enforce_security_group_inbound_rules_on_private_link_traffic = "{{ item.enforce_security_group_inbound_rules_on_private_link_traffic }}"
    idle_timeout = "{{ item.idle_timeout }}"
    xff_header_processing_mode = "{{ item.xff_header_processing_mode }}"

    client_keep_alive = {{ item.client_keep_alive }}
    drop_invalid_header_fields = {{ item.drop_invalid_header_fields }}
    enable_cross_zone_load_balancing = {{ item.enable_cross_zone_load_balancing }}
    enable_deletion_protection = {{ item.enable_deletion_protection }}
    enable_http2 = {{ item.enable_http2 }}
    enable_tls_version_and_cipher_suite_headers = {{ item.enable_tls_version_and_cipher_suite_headers }}
    enable_waf_fail_open = {{ item.enable_waf_fail_open }}
    enable_xff_client_port = {{ item.enable_xff_client_port }}
    enable_zonal_shift = {{ item.enable_zonal_shift }}
    preserve_host_header = {{ item.preserve_host_header }}

    listeners = {
      {%- for listener in item.listeners %}
      {%- for key, value in listener.items() %}
      {{ key }} = {
        port = "{{ value.port }}"
        protocol = "{{ value.protocol }}"
        certificate_arn = "{{ value.certificate }}"
        additional_certificate_arns = {{ value.additional_certificate_arns | default([]) }}
        {%- if value.weighted_forward is defined %}
        weighted_forward = [
          {%- for rule in value.weighted_forward %}
          {
            target_group_key = "{{ rule.target_group_key }}"
            target_groups = [
              {%- for tg in rule.target_groups %}
              {
                target_group_key = "{{ tg.target_group_key }}"
                weight = {{ tg.weight }}
              }{% if not loop.last %}, {% endif %}
              {%- endfor %}
            ]
          }{% if not loop.last %}, {% endif %}
          {%- endfor %}
        ]
        {%- endif %}
        {%- if value.default_action is defined %}
        default_action = {
          {%- for key, value in value.default_action.items() %}
          {{ key }} = {
            {%- for key, value in value.items() %}
            {{ key }} = "{{ value }}"
            {%- endfor %}
          }
          {%- endfor %}
        }
        {%- endif %}
      }{% if not loop.last %}, {% endif %}
      {%- endfor %}
      {%- endfor %}
    }
  }
  {%- endfor %}
}
